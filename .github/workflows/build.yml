name: üèóÔ∏è Build
on:
  push:
    paths-ignore:
      - .github/**
  pull_request:
  workflow_dispatch:
  merge_group:
  create:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
env:
  AWS_REGION: "eu-west-1"
permissions:
  actions: read
  checks: write
  contents: write
  deployments: read
  id-token: write
  issues: read
  discussions: read
  packages: read
  pages: read
  pull-requests: read
  repository-projects: read
  security-events: read
  statuses: read
run-name: üèóÔ∏è Build ${{ github.ref_name	}}
jobs:
  # =====================================================
  # Job: Build
  # =====================================================
  build:
    runs-on: ubuntu-latest
    outputs:
      sha_tag: ${{ steps.app_info.outputs.sha_tag }}
      version_tag: ${{ steps.get_version.outputs.version }}
      branch_tag: ${{ steps.app_info.outputs.branch_tag }}
    steps:
      - name: ‚úÖ Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.VENLY_GITHUB_ACTIONS_TOKEN }}

      - name: ‚ÑπÔ∏è App Info
        id: app_info
        uses: ./.github/actions/app_info
        with:
          branch: ${{ github.ref }}

      - name: üîç Get Version
        id: get_version
        uses: ./.github/actions/get_version

      - name: üìÑ Show Build Information
        run: |
          echo "Sha Tag: ${{ steps.app_info.outputs.sha_tag }}"
          echo "Version Tag: ${{ steps.get_version.outputs.version }}"
          echo "Branch Tag: ${{ steps.app_info.outputs.branch_tag }}"
  # =====================================================
  # Job: Build Docker
  # =====================================================
  docker:
    if: ${{ success() && github.event_name != 'pull_request' && contains(fromJSON('["main", "master", "develop"]'), github.ref_name) || startsWith(github.ref_name, 'release-') || startsWith(github.ref_name, 'hotfix-') || startsWith(github.ref_name, 'VENLY-') }}
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        include:
          - ecr: venly-react-demo-eu-west-1
            docker_context: "connect-sdk"
    steps:
      - name: ‚úÖ Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.VENLY_GITHUB_ACTIONS_TOKEN }}

      - name: üê≥ Build and Push Docker Image
        id: build-deploy-docker
        uses: ./.github/actions/build_docker
        with:
          aws_role: ${{ secrets.RESOURCES_DEPLOY_ROLE }}
          docker_context: ${{ matrix.docker_context }}
          ecr_repo: ${{ matrix.ecr }}
          sha_tag: ${{ needs.build.outputs.sha_tag }}
          version_tag: ${{ needs.build.outputs.version_tag }}
          branch_tag: ${{ needs.build.outputs.branch_tag }}
          push_image: true
  # =====================================================
  # Job: Deploy QA
  # =====================================================
  deploy-qa:
    needs:
      - build
      - docker
    runs-on: ubuntu-latest
    if: github.event_name != 'workflow_dispatch' && github.ref_name == 'develop'
    steps:
      - name: üîë Configure AWS credentials
        id: aws_creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-west-1
          role-to-assume: ${{ secrets.RESOURCES_DEPLOY_ROLE }}
          role-session-name: OIDCSession
          mask-aws-account-id: false
          output-credentials: true

      - name: üöÄ Deploy
        uses: appleboy/ssh-action@v1.0.3
        env:
          AWS_ACCESS_KEY_ID: ${{ steps.aws_creds.outputs.aws-access-key-id }}
          AWS_SECRET_ACCESS_KEY: ${{ steps.aws_creds.outputs.aws-secret-access-key }}
          AWS_SESSION_TOKEN: ${{ steps.aws_creds.outputs.aws-session-token }}
          SHA: ${{ github.sha }}
          TAG: ${{ github.ref_name}}
        with:
          host: ${{ secrets.DEMO_ARKETYPE_HOST }}
          username: ${{ secrets.DEMO_ARKETYPE_USER }}
          key: ${{ secrets.ACTIONS_PRIVATE_SSH_KEY }}
          envs: AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY, AWS_SESSION_TOKEN
          script: |
            echo "sha: ${{ env.SHA }}"
            echo "branch: ${{ github.ref_name }}"
            export AWS_ACCESS_KEY_ID=${{ env.AWS_ACCESS_KEY_ID }}
            export AWS_SECRET_ACCESS_KEY=${{ env.AWS_SECRET_ACCESS_KEY }}
            export AWS_SESSION_TOKEN=${{ env.AWS_SESSION_TOKEN }}
            aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin ${{ steps.aws_creds.outputs.aws-account-id }}.dkr.ecr.eu-west-1.amazonaws.com
            echo "Deploying ${{ github.ref_name}}"
            bash /home/jenkins/restart-react-qa.sh
            docker logout ${{ steps.aws_creds.outputs.aws-account-id }}.dkr.ecr.eu-west-1.amazonaws.com
  # =====================================================
  # Job: Merge Back
  # =====================================================
  merge-back:
    if: startsWith(github.ref, 'refs/heads/hotfix-') || startsWith(github.ref, 'refs/heads/release-')
    needs:
      - build
      - docker
    runs-on: ubuntu-latest
    outputs:
      runner_name: ${{ runner.name }}
    steps:
      - name: ‚úÖ Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.VENLY_GITHUB_ACTIONS_TOKEN }}

      - name: üîÑ Merge Back To Develop
        id: merge_back
        uses: ArkaneNetwork/venly-github-workflows/.github/actions/merge_back@main
        with:
          branch: ${{ github.ref }}
          token: ${{ secrets.VENLY_GITHUB_ACTIONS_TOKEN }}
